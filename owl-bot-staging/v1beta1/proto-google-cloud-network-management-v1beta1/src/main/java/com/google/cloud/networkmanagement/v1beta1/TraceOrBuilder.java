// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/networkmanagement/v1beta1/trace.proto

package com.google.cloud.networkmanagement.v1beta1;

public interface TraceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.networkmanagement.v1beta1.Trace)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1beta1.EndpointInfo endpoint_info = 1;</code>
   * @return Whether the endpointInfo field is set.
   */
  boolean hasEndpointInfo();
  /**
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1beta1.EndpointInfo endpoint_info = 1;</code>
   * @return The endpointInfo.
   */
  com.google.cloud.networkmanagement.v1beta1.EndpointInfo getEndpointInfo();
  /**
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1beta1.EndpointInfo endpoint_info = 1;</code>
   */
  com.google.cloud.networkmanagement.v1beta1.EndpointInfoOrBuilder getEndpointInfoOrBuilder();

  /**
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1beta1.Step steps = 2;</code>
   */
  java.util.List<com.google.cloud.networkmanagement.v1beta1.Step> 
      getStepsList();
  /**
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1beta1.Step steps = 2;</code>
   */
  com.google.cloud.networkmanagement.v1beta1.Step getSteps(int index);
  /**
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1beta1.Step steps = 2;</code>
   */
  int getStepsCount();
  /**
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1beta1.Step steps = 2;</code>
   */
  java.util.List<? extends com.google.cloud.networkmanagement.v1beta1.StepOrBuilder> 
      getStepsOrBuilderList();
  /**
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1beta1.Step steps = 2;</code>
   */
  com.google.cloud.networkmanagement.v1beta1.StepOrBuilder getStepsOrBuilder(
      int index);
}
